#############################################################################
# Makefile for building: ONMASYSTEM
# Generated by qmake (2.01a) (Qt 4.8.7) on: Sat Oct 30 15:58:04 2021
# Project:  ONMASYSTEM.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile ONMASYSTEM.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -I. -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = commonclass.cpp \
		displaywindow.cpp \
		graphplotclass.cpp \
		issinfoclass.cpp \
		main.cpp \
		mainwindow.cpp \
		networkclass.cpp \
		qcustomplot.cpp \
		signalprocessingclass.cpp \
		sonarcommunication.cpp \
		statuspage.cpp \
		ThresholdFrame.cpp \
		thresholdsettingwindow.cpp \
		tracksetting.cpp \
		trackwindowsetting.cpp moc_displaywindow.cpp \
		moc_graphplotclass.cpp \
		moc_issinfoclass.cpp \
		moc_mainwindow.cpp \
		moc_networkclass.cpp \
		moc_qcustomplot.cpp \
		moc_signalprocessingclass.cpp \
		moc_sonarcommunication.cpp \
		moc_statuspage.cpp \
		moc_ThresholdFrame.cpp \
		moc_thresholdsettingwindow.cpp \
		moc_tracksetting.cpp \
		moc_trackwindowsetting.cpp
OBJECTS       = commonclass.o \
		displaywindow.o \
		graphplotclass.o \
		issinfoclass.o \
		main.o \
		mainwindow.o \
		networkclass.o \
		qcustomplot.o \
		signalprocessingclass.o \
		sonarcommunication.o \
		statuspage.o \
		ThresholdFrame.o \
		thresholdsettingwindow.o \
		tracksetting.o \
		trackwindowsetting.o \
		moc_displaywindow.o \
		moc_graphplotclass.o \
		moc_issinfoclass.o \
		moc_mainwindow.o \
		moc_networkclass.o \
		moc_qcustomplot.o \
		moc_signalprocessingclass.o \
		moc_sonarcommunication.o \
		moc_statuspage.o \
		moc_ThresholdFrame.o \
		moc_thresholdsettingwindow.o \
		moc_tracksetting.o \
		moc_trackwindowsetting.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		ONMASYSTEM.pro
QMAKE_TARGET  = ONMASYSTEM
DESTDIR       = 
TARGET        = ONMASYSTEM

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_ThresholdFrame.h ui_ThresholdSettingWindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: ONMASYSTEM.pro  /usr/lib64/qt4/mkspecs/linux-g++/qmake.conf /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl \
		/usr/lib64/libQtNetwork.prl
	$(QMAKE) -o Makefile ONMASYSTEM.pro
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/lib64/qt4/mkspecs/common/g++-base.conf:
/usr/lib64/qt4/mkspecs/common/g++-unix.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/release.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/shared.prf:
/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
/usr/lib64/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile ONMASYSTEM.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/ONMASYSTEM1.0.0 || $(MKDIR) .tmp/ONMASYSTEM1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ONMASYSTEM1.0.0/ && $(COPY_FILE) --parents commonclass.h DataTypes.h displaywindow.h FilterCoeffients.h graphplotclass.h issinfoclass.h mainwindow.h networkclass.h qcustomplot.h QuantisationTable.h signalprocessingclass.h sonarcommunication.h statuspage.h ThresholdFrame.h thresholdsettingwindow.h tracksetting.h trackwindowsetting.h ui_InfoBasePage.h .tmp/ONMASYSTEM1.0.0/ && $(COPY_FILE) --parents commonclass.cpp displaywindow.cpp graphplotclass.cpp issinfoclass.cpp main.cpp mainwindow.cpp networkclass.cpp qcustomplot.cpp signalprocessingclass.cpp sonarcommunication.cpp statuspage.cpp ThresholdFrame.cpp thresholdsettingwindow.cpp tracksetting.cpp trackwindowsetting.cpp .tmp/ONMASYSTEM1.0.0/ && $(COPY_FILE) --parents mainwindow.ui ThresholdFrame.ui ThresholdSettingWindow.ui .tmp/ONMASYSTEM1.0.0/ && (cd `dirname .tmp/ONMASYSTEM1.0.0` && $(TAR) ONMASYSTEM1.0.0.tar ONMASYSTEM1.0.0 && $(COMPRESS) ONMASYSTEM1.0.0.tar) && $(MOVE) `dirname .tmp/ONMASYSTEM1.0.0`/ONMASYSTEM1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ONMASYSTEM1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_displaywindow.cpp moc_graphplotclass.cpp moc_issinfoclass.cpp moc_mainwindow.cpp moc_networkclass.cpp moc_qcustomplot.cpp moc_signalprocessingclass.cpp moc_sonarcommunication.cpp moc_statuspage.cpp moc_ThresholdFrame.cpp moc_thresholdsettingwindow.cpp moc_tracksetting.cpp moc_trackwindowsetting.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_displaywindow.cpp moc_graphplotclass.cpp moc_issinfoclass.cpp moc_mainwindow.cpp moc_networkclass.cpp moc_qcustomplot.cpp moc_signalprocessingclass.cpp moc_sonarcommunication.cpp moc_statuspage.cpp moc_ThresholdFrame.cpp moc_thresholdsettingwindow.cpp moc_tracksetting.cpp moc_trackwindowsetting.cpp
moc_displaywindow.cpp: DataTypes.h \
		graphplotclass.h \
		qcustomplot.h \
		issinfoclass.h \
		thresholdsettingwindow.h \
		trackwindowsetting.h \
		displaywindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) displaywindow.h -o moc_displaywindow.cpp

moc_graphplotclass.cpp: DataTypes.h \
		qcustomplot.h \
		graphplotclass.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) graphplotclass.h -o moc_graphplotclass.cpp

moc_issinfoclass.cpp: DataTypes.h \
		issinfoclass.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) issinfoclass.h -o moc_issinfoclass.cpp

moc_mainwindow.cpp: DataTypes.h \
		statuspage.h \
		displaywindow.h \
		graphplotclass.h \
		qcustomplot.h \
		issinfoclass.h \
		thresholdsettingwindow.h \
		trackwindowsetting.h \
		mainwindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_networkclass.cpp: DataTypes.h \
		networkclass.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) networkclass.h -o moc_networkclass.cpp

moc_qcustomplot.cpp: qcustomplot.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) qcustomplot.h -o moc_qcustomplot.cpp

moc_signalprocessingclass.cpp: DataTypes.h \
		FilterCoeffients.h \
		signalprocessingclass.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) signalprocessingclass.h -o moc_signalprocessingclass.cpp

moc_sonarcommunication.cpp: DataTypes.h \
		sonarcommunication.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) sonarcommunication.h -o moc_sonarcommunication.cpp

moc_statuspage.cpp: DataTypes.h \
		statuspage.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) statuspage.h -o moc_statuspage.cpp

moc_ThresholdFrame.cpp: ThresholdFrame.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) ThresholdFrame.h -o moc_ThresholdFrame.cpp

moc_thresholdsettingwindow.cpp: DataTypes.h \
		thresholdsettingwindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) thresholdsettingwindow.h -o moc_thresholdsettingwindow.cpp

moc_tracksetting.cpp: DataTypes.h \
		tracksetting.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) tracksetting.h -o moc_tracksetting.cpp

moc_trackwindowsetting.cpp: DataTypes.h \
		trackwindowsetting.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) trackwindowsetting.h -o moc_trackwindowsetting.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_ThresholdFrame.h ui_ThresholdSettingWindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_ThresholdFrame.h ui_ThresholdSettingWindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/lib64/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_ThresholdFrame.h: ThresholdFrame.ui
	/usr/lib64/qt4/bin/uic ThresholdFrame.ui -o ui_ThresholdFrame.h

ui_ThresholdSettingWindow.h: ThresholdSettingWindow.ui
	/usr/lib64/qt4/bin/uic ThresholdSettingWindow.ui -o ui_ThresholdSettingWindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

commonclass.o: commonclass.cpp commonclass.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o commonclass.o commonclass.cpp

displaywindow.o: displaywindow.cpp displaywindow.h \
		DataTypes.h \
		graphplotclass.h \
		qcustomplot.h \
		issinfoclass.h \
		thresholdsettingwindow.h \
		trackwindowsetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o displaywindow.o displaywindow.cpp

graphplotclass.o: graphplotclass.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphplotclass.o graphplotclass.cpp

issinfoclass.o: issinfoclass.cpp issinfoclass.h \
		DataTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o issinfoclass.o issinfoclass.cpp

main.o: main.cpp mainwindow.h \
		DataTypes.h \
		statuspage.h \
		displaywindow.h \
		graphplotclass.h \
		qcustomplot.h \
		issinfoclass.h \
		thresholdsettingwindow.h \
		trackwindowsetting.h \
		networkclass.h \
		signalprocessingclass.h \
		FilterCoeffients.h \
		commonclass.h \
		sonarcommunication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		DataTypes.h \
		statuspage.h \
		displaywindow.h \
		graphplotclass.h \
		qcustomplot.h \
		issinfoclass.h \
		thresholdsettingwindow.h \
		trackwindowsetting.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

networkclass.o: networkclass.cpp networkclass.h \
		DataTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o networkclass.o networkclass.cpp

qcustomplot.o: qcustomplot.cpp qcustomplot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qcustomplot.o qcustomplot.cpp

signalprocessingclass.o: signalprocessingclass.cpp signalprocessingclass.h \
		DataTypes.h \
		FilterCoeffients.h \
		QuantisationTable.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o signalprocessingclass.o signalprocessingclass.cpp

sonarcommunication.o: sonarcommunication.cpp sonarcommunication.h \
		DataTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sonarcommunication.o sonarcommunication.cpp

statuspage.o: statuspage.cpp statuspage.h \
		DataTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o statuspage.o statuspage.cpp

ThresholdFrame.o: ThresholdFrame.cpp ThresholdFrame.h \
		ui_ThresholdFrame.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ThresholdFrame.o ThresholdFrame.cpp

thresholdsettingwindow.o: thresholdsettingwindow.cpp thresholdsettingwindow.h \
		DataTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o thresholdsettingwindow.o thresholdsettingwindow.cpp

tracksetting.o: tracksetting.cpp tracksetting.h \
		DataTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tracksetting.o tracksetting.cpp

trackwindowsetting.o: trackwindowsetting.cpp trackwindowsetting.h \
		DataTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trackwindowsetting.o trackwindowsetting.cpp

moc_displaywindow.o: moc_displaywindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_displaywindow.o moc_displaywindow.cpp

moc_graphplotclass.o: moc_graphplotclass.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_graphplotclass.o moc_graphplotclass.cpp

moc_issinfoclass.o: moc_issinfoclass.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_issinfoclass.o moc_issinfoclass.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_networkclass.o: moc_networkclass.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_networkclass.o moc_networkclass.cpp

moc_qcustomplot.o: moc_qcustomplot.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qcustomplot.o moc_qcustomplot.cpp

moc_signalprocessingclass.o: moc_signalprocessingclass.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_signalprocessingclass.o moc_signalprocessingclass.cpp

moc_sonarcommunication.o: moc_sonarcommunication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sonarcommunication.o moc_sonarcommunication.cpp

moc_statuspage.o: moc_statuspage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_statuspage.o moc_statuspage.cpp

moc_ThresholdFrame.o: moc_ThresholdFrame.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ThresholdFrame.o moc_ThresholdFrame.cpp

moc_thresholdsettingwindow.o: moc_thresholdsettingwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_thresholdsettingwindow.o moc_thresholdsettingwindow.cpp

moc_tracksetting.o: moc_tracksetting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tracksetting.o moc_tracksetting.cpp

moc_trackwindowsetting.o: moc_trackwindowsetting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_trackwindowsetting.o moc_trackwindowsetting.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

